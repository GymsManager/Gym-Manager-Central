name: Deploy to Production on Release Merge

on:
  push:
    branches:
      - release

env:
  IMAGE_NAME: mo3az014/gym-manager-central

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKERHUB_PASSWORD }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and push Docker image
        run: |
          docker buildx build --platform linux/amd64 -t $IMAGE_NAME:latest . --push

      - name: SSH into Droplet & deploy via docker-compose
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.DROPLET_HOST }}
          username: ${{ secrets.DROPLET_USER }}
          password: ${{ secrets.DROPLET_PASSWORD }}
          script: |
            cd /var/www/gym-manager-central
            docker-compose -f docker-compose.prod.yml pull
            docker-compose -f docker-compose.prod.yml up -d --no-deps app

            # Laravel post-deploy
            docker-compose -f docker-compose.prod.yml exec app php artisan optimize:clear
            docker-compose -f docker-compose.prod.yml exec app php artisan config:cache
            docker-compose -f docker-compose.prod.yml exec app php artisan route:cache
            docker-compose -f docker-compose.prod.yml exec app php artisan view:cache
            docker-compose -f docker-compose.prod.yml exec app php artisan migrate --force